version: '3.9'

services:
  postgres:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    networks:
      - auth-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - auth-network

  app:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "50054:50054"
      - "50055:50055"
      - "8082:8082"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=secret
      - DB_NAME=mydb
      - REDIS_ADDR=redis:6379
      - SECRET_KEY=your-secret-key
    networks:
      - auth-network
  users_filebeat:
    image: docker.elastic.co/beats/filebeat:7.10.1
    container_name: users_filebeat
    user: root
    volumes:
      - app_logs:/var/log/app:ro
    command: >
      /bin/sh -c "
        echo '
          filebeat.inputs:
          - type: log
            enabled: true
            paths:
              - /var/log/app/myapp.log
            json:
              keys_under_root: true
              overwrite_keys: true
              add_error_key: true
            fields:
              service: users_app
          output.elasticsearch:
            hosts: [\"http://host.docker.internal:9200\"]
            index: \"%{[fields.service]}-logs\"
          setup.template.name: \"users_app-logs\"
          setup.template.pattern: \"users_app-logs-*\"
          setup.template.settings:
            index.number_of_shards: 1
          setup.kibana:
            host: \"http://host.docker.internal:5601\"
          setup.template.settings:
            index.number_of_shards: 1
          logging.level: info
          logging.to_files: true
          logging.files:
            path: /var/log/filebeat
            name: filebeat.log
            keepfiles: 7
        ' > /usr/share/filebeat/filebeat.yml &&
        until curl -s http://host.docker.internal:9200; do sleep 2; done &&
        filebeat -e --strict.perms=false -c /usr/share/filebeat/filebeat.yml
      "
    networks:
      - auth-network

volumes:
  postgres_data:
  app_logs:

networks:
  auth-network:
    driver: bridge